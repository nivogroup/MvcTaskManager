{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/admin/about/about.component.html","src/app/admin/dashboard/dashboard.component.html","src/app/admin/my-profile/my-profile.component.html","src/app/admin/projects/projects.component.html","src/app/app.component.html","src/app/login/login.component.html","src/app/sign-up/sign-up.component.html","src/app/tasks/tasks.component.html","node_modules/tslib/tslib.es6.js","src/app/admin/about/about.component.scss","src/app/admin/about/about.component.ts","src/app/admin/admin.module.ts","src/app/admin/dashboard/dashboard.component.scss","src/app/admin/dashboard/dashboard.component.ts","src/app/admin/my-profile/my-profile.component.scss","src/app/admin/my-profile/my-profile.component.ts","src/app/admin/projects/projects.component.scss","src/app/admin/projects/projects.component.ts","src/app/app-routing.module.ts","src/app/app.component.scss","src/app/app.component.ts","src/app/app.module.ts","src/app/can-activate-guard.service.ts","src/app/client-location-status-validator.directive.ts","src/app/client-location.ts","src/app/client-locations.service.ts","src/app/countries.service.ts","src/app/custom-validators.service.ts","src/app/dashboard.service.ts","src/app/jwt-interceptor.service.ts","src/app/jwt-un-authorized-interceptor.service.ts","src/app/login-view-model.ts","src/app/login.service.ts","src/app/login/login.component.scss","src/app/login/login.component.ts","src/app/project-idunique-validator.directive.ts","src/app/project.ts","src/app/projects.service.ts","src/app/sign-up/sign-up.component.scss","src/app/sign-up/sign-up.component.ts","src/app/tasks/tasks.component.scss","src/app/tasks/tasks.component.ts","src/app/team-size-validator.directive.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"<p>about works!</p>\\n\"","export default \"<nav>\\n    <ol class=\\\"breadcrumb\\\">\\n      <li class=\\\"breadcrumb-item\\\"><a routerLink=\\\"/\\\">Home</a></li>\\n      <li class=\\\"breadcrumb-item active\\\">Dashboard</li>\\n    </ol>\\n</nav>\\n  \\n<h5>Dashboard</h5> \\n<h6>{{ToDay | date : \\\"d/M/y\\\"}}</h6>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-lg-3 pb-3\\\" style=\\\"background-color:#e9e6e6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-11 text-white text-center mx-auto rounded pt-2 pb-2 font-weight-bold\\\"\\n          style=\\\"background-color:#a39e9e; font-family:  'Arial Narrow Bold', sans-serif\\\">{{Designation | uppercase}}</div>\\n        <div class=\\\"col-12 text-center mt-2\\\">\\n          <img src=\\\"assets/user.png\\\" width=\\\"120px\\\">\\n        </div>\\n        <div class=\\\"col-12 text-center pt-2 pb-2 font-weight-bold\\\" style=\\\"font-family: Tahoma\\\">\\n          {{Username | lowercase}}\\n        </div>\\n        <div class=\\\"col-12 text-center pt-2 pb-2\\\" style=\\\"font-family: Arial\\\">TEAM SUMMARY</div>\\n        <div class=\\\"col-12 mb-3\\\">\\n          <ul class=\\\"list-group\\\">\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n              NO. OF TEAM MEMBERS\\n              <span class=\\\"badge badge-secondary badge-pill\\\" style=\\\"font-size:13px\\\">{{NoOfTeamMembers}}</span>\\n            </li>\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n              TOTAL COST OF ALL PROJECTS\\n              <span class=\\\"badge badge-secondary badge-pill\\\" style=\\\"font-size:13px\\\">$ {{TotalCostOfAllProjects}} k</span>\\n            </li>\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n              PENDING TASKS\\n              <span class=\\\"badge badge-secondary badge-pill\\\" style=\\\"font-size:13px\\\">{{PendingTasks}}</span>\\n            </li>\\n            <li class=\\\"list-group-item d-flex justify-content-between align-items-center\\\">\\n              UPCOMING PROJECTS\\n              <span class=\\\"badge badge-secondary badge-pill\\\" style=\\\"font-size:13px\\\">{{UpComingProjects | percent}}</span>\\n            </li>\\n          </ul>\\n        </div>\\n        <div class=\\\"col-12 text-center pt-2 pb-2\\\" style=\\\"font-family: 'Arial Narrow'\\\">CLIENTS</div>\\n        <div class=\\\"col-12\\\">\\n          <ul class=\\\"list-group list-group-flush\\\">\\n            <li class=\\\"list-group-item\\\" *ngFor=\\\"let client of Clients\\\">{{client | slice: 0: 10}}</li>\\n          </ul>\\n          <!--{{TeamMembersSummary}}-->\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-12 pt-0 pb-2\\\" style=\\\"background-color:#e9e6e6\\\">\\n          <div class=\\\"row mt-2\\\">\\n            <div class=\\\"col-6 text-left\\\">\\n              <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\n                  data-toggle=\\\"dropdown\\\">\\n                  Project A\\n                </button>\\n                <div class=\\\"dropdown-menu\\\">\\n                  <a class=\\\"dropdown-item\\\" href=\\\"#\\\" *ngFor=\\\"let project of Projects\\\" onclick=\\\"return false\\\"\\n                    (click)=\\\"onProjectChange($event)\\\">{{project}}</a>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n              <div class=\\\"dropdown\\\">\\n                <button class=\\\"btn btn-secondary dropdown-toggle\\\" type=\\\"button\\\" id=\\\"dropdownMenuButton\\\"\\n                  data-toggle=\\\"dropdown\\\">\\n                  2019\\n                </button>\\n                <div class=\\\"dropdown-menu\\\">\\n                    <a class=\\\"dropdown-item\\\" href=\\\"#\\\" *ngFor=\\\"let year of Years\\\">\\n                        <span [ngSwitch]=\\\"year\\\">\\n                            <span *ngSwitchCase=\\\"'2019'\\\" style=\\\"color: green;\\\">{{year}}</span>\\n                            <span *ngSwitchCase=\\\"'2018'\\\" style=\\\"color: blue;\\\">{{year}}</span>\\n                            <span *ngSwitchCase=\\\"'2017'\\\" style=\\\"color: red;\\\">{{year}}</span>\\n                            <span *ngSwitchDefault style=\\\"color: black;\\\">{{year}}</span>\\n                        </span>\\n                    </a>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-auto rounded font-weight-bold\\\"\\n          style=\\\"background-color: #718d97; font-family: 'Arial Narrow'\\\">PROJECT BRIEFING</div>\\n        <div class=\\\"col-12\\\">\\n          <table class=\\\"table table-borderless\\\">\\n            <tr>\\n              <td>Project Cost</td>\\n              <td>{{ProjectCost | currency: \\\"INR\\\" }}</td>\\n            </tr>\\n            <tr>\\n              <td>Current Expenditure</td>\\n              <td>{{CurrentExpenditure | currency: \\\"INR\\\"}}</td>\\n            </tr>\\n            <tr>\\n              <td>Available Funds</td>\\n              <td>{{AvailableFunds | currency: \\\"INR\\\"}}</td>\\n            </tr>\\n          </table>\\n        </div>\\n        <div class=\\\"col-11 mx-auto mt-1 text-white text-center pt-2 pb-2 mx-2 rounded font-weight-bold\\\"\\n          style=\\\"background-color:#718d97; font-family: 'Arial Narrow'\\\">TEAM MEMBERS SUMMARY</div>\\n        <div class=\\\"col-12\\\">\\n          <table class=\\\"table\\\">\\n            <tr>\\n              <th>Region</th>\\n              <th>Team Members Count</th>\\n              <th>Temporarily Unavailable Members</th>\\n            </tr>\\n            <tr *ngFor=\\\"let teamMemberSumary of TeamMembersSummary\\\">\\n              <td>\\n                <b>{{teamMemberSumary.Region}}</b>\\n              </td>\\n              <td>\\n                {{teamMemberSumary.TeamMembersCount}}\\n              </td>\\n              <td>\\n                {{teamMemberSumary.TemporarilyUnavailableMembers}}\\n              </td>\\n            </tr>\\n  \\n          </table>\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"col-lg-3\\\" style=\\\"background-color:#e9e6e6\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-11 mx-auto mt-1 text-white text-center pt-1 pb-2 mx-2 rounded font-weight-bold\\\"\\n          style=\\\"background-color:#718d97; font-family: 'Arial Narrow'\\\">TEAM MEMBERS</div>\\n        <div class=\\\"col-lg-12 pt-2\\\">\\n          <div class=\\\"accordion\\\" id=\\\"accordion1\\\">\\n            <div class=\\\"card\\\" *ngFor=\\\"let teamMembersGroup of TeamMembers; let i = index\\\">\\n  \\n  \\n              <div class=\\\"card-header bg-secondary\\\" id=\\\"card1\\\">\\n                <h2 class=\\\"mb-0\\\">\\n                  <button class=\\\"btn btn-link text-white\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n                    [attr.data-target]=\\\" '#cardbody' + i \\\">{{teamMembersGroup.Region}}</button>\\n                </h2>\\n              </div>\\n              <div [id]=\\\" 'cardbody' + i \\\" class=\\\"collapse\\\" data-parent=\\\"#accordion1\\\" [ngClass]=\\\"(i == 0)? 'show': '' \\\">\\n                <div class=\\\"card-body\\\">\\n  \\n                  <div *ngIf=\\\"i == 0; then firstTemplate; else secondTemplate\\\">\\n  \\n                  </div>\\n  \\n                  <ng-template #firstTemplate>\\n                    <div class=\\\"card\\\" *ngFor=\\\"let member of teamMembersGroup.Members\\\">\\n                      <div class=\\\"card-header bg-primary text-white\\\">#{{member.ID}}  {{member.Name}}</div>\\n                      <div class=\\\"card-body\\\">{{member.Status}}</div>\\n                    </div>\\n                  </ng-template>\\n  \\n                  <ng-template #secondTemplate>\\n                    <table class=\\\"table\\\">\\n                      <thead>\\n                        <tr>\\n                          <th>ID</th>\\n                          <th>Name</th>\\n                          <th>Status</th>\\n                        </tr>\\n                      </thead>\\n                      <tbody>\\n                        <tr *ngFor=\\\"let member of teamMembersGroup.Members\\\">\\n                          <td>{{member.ID}}</td>\\n                          <td [style.color]=\\\" (member.Status == 'Busy')? 'red': 'black' \\\">{{member.Name}}</td>\\n                          <td>{{member.Status}}</td>\\n                        </tr>\\n                      </tbody>\\n                    </table>\\n                  </ng-template>\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n</div>\\n\"","export default \"<p>my-profile works!</p>\\n\"","export default \"<h1>\\n  Projects\\n  <i class=\\\"fa fa-circle-o-notch fa-spin\\\" style=\\\"font-size:34px\\\" *ngIf=\\\"showLoading\\\"></i>\\n</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xl-9 mx-auto\\\">\\n    <div class=\\\"form-group form-row\\\">\\n\\n      <div class=\\\"col-2\\\">\\n        <button class=\\\"btn btn-primary\\\" data-toggle=\\\"modal\\\" data-target=\\\"#newModal\\\" (click)=\\\"onNewClick($event)\\\">\\n          Create Project</button>\\n      </div>\\n\\n      <label for=\\\"drpSearchBy\\\" class=\\\"col-form-label col-2 text-right\\\">Search by:</label>\\n\\n      <div class=\\\"col-3\\\">\\n        <select class=\\\"form-control\\\" id=\\\"drpSearchBy\\\" name=\\\"SearchBy\\\" [(ngModel)]=\\\"searchBy\\\">\\n          <option value=\\\"ProjectID\\\">Project ID</option>\\n          <option value=\\\"ProjectName\\\">Project Name</option>\\n          <option value=\\\"DateOfStart\\\">Date of Start</option>\\n          <option value=\\\"TeamSize\\\">Team Size</option>\\n        </select>\\n      </div>\\n\\n      <label for=\\\"textSearchText\\\" class=\\\"col-form-label col-1 text-right\\\">Search:</label>\\n\\n      <div class=\\\"col-4\\\">\\n        <div class=\\\"input-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"txtSearchText\\\" name=\\\"SearchText\\\" [(ngModel)]=\\\"searchText\\\">\\n          <div class=\\\"input-group-append\\\" (click)=\\\"onSearchClick()\\\">\\n            <span class=\\\"input-group-text\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"col-xl-9 mx-auto\\\">\\n    <table class=\\\"table\\\">\\n      <thead>\\n        <th>Project ID</th>\\n        <th>Project Name</th>\\n        <th>Date of Start</th>\\n        <th>Team Size</th>\\n        <th>Client Location</th>\\n        <th>Status</th>\\n        <th>Actions</th>\\n      </thead>\\n      <tbody>\\n        <tr *ngFor=\\\"let project of projects; let i = index\\\" [ngClass]=\\\"{ 'text-muted': !project.active}\\\">\\n          <td>{{project.projectID}}</td>\\n          <td>{{project.projectName}}</td>\\n          <td>{{project.dateOfStart}}</td>\\n          <td>{{project.teamSize}}</td>\\n          <td>{{project.clientLocation.clientLocationName}}</td>\\n          <td>{{project.status}}</td>\\n          <td>\\n            <button class=\\\"btn btn-info\\\" (click)=\\\"onEditClick($event, i)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#editModal\\\">\\n              Edit</button>&nbsp;\\n            <button class=\\\"btn btn-warning\\\" (click)=\\\"onDeleteClick($event, i)\\\" data-toggle=\\\"modal\\\" data-target=\\\"#deleteModal\\\">\\n              Delete</button>\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n\\n<!---New Project--->\\n<form #newForm=\\\"ngForm\\\" novalidate=\\\"novalidate\\\" appClientLocationStatusValidator>\\n  <div class=\\\"modal\\\" role=\\\"dialog\\\" id=\\\"newModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\" style=\\\"width:700px\\\">\\n        <div class=\\\"modal-header bg-primary text-white\\\">\\n          <div class=\\\"modal-title\\\">New Project</div>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtNewProjectID\\\" class=\\\"col-sm-4 col-form-label\\\">Project ID</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtNewProjectID\\\" style=\\\"width:130px\\\" class=\\\"form-control\\\" placeholder=\\\"Project ID\\\" \\n              name=\\\"ProjectID\\\" [(ngModel)]=\\\"newProject.projectID\\\" required=\\\"required\\\" pattern=\\\"^[0-9]*$\\\" \\n              appProjectIDUniqueValidator #newProjectID=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newProjectID.invalid && \\n              (newProjectID.dirty || newProjectID.touched || newForm.submitted), 'is-valid': newProjectID.valid && \\n              (newProjectID.dirty || newProjectID.touched || newForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || \\n              newForm.submitted) && newProjectID.errors?.required\\\">Project ID can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || \\n              newForm.submitted) && newProjectID.errors?.pattern\\\">Project ID should contain numbers only</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectID.invalid && (newProjectID.dirty || newProjectID.touched || \\n              newForm.submitted) && newProjectID.errors?.uniqueProjectID\\\">Duplicate Project ID</span>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtNewProjectName\\\" class=\\\"col-sm-4 col-form-label\\\">Project Name</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtNewProjectName\\\" class=\\\"form-control\\\" placeholder=\\\"Project Name\\\" name=\\\"ProjectName\\\" \\n              [(ngModel)]=\\\"newProject.projectName\\\" required=\\\"required\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" pattern=\\\"^[A-Za-z0-9 /-]*$\\\" \\n              #newProjectName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newProjectName.invalid && (newProjectName.dirty || \\n              newProjectName.touched || newForm.submitted), 'is-valid': newProjectName.valid && (newProjectName.dirty || \\n              newProjectName.touched || newForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || \\n              newForm.submitted) && newProjectName.errors?.required\\\">Project Name can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || \\n              newForm.submitted) && newProjectName.errors?.pattern\\\">\\n              Project Name can contain alphabets, digits, dot, hyphen or space only</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newProjectName.invalid && (newProjectName.dirty || newProjectName.touched || \\n              newForm.submitted) && newProjectName.errors?.minlength\\\">Project name should be at least 3 characters long</span>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtNewDateOfStart\\\" class=\\\"col-sm-4 col-form-label\\\">Date of Start</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"date\\\" id=\\\"txtNewDateOfStart\\\" style=\\\"width:180px\\\" class=\\\"form-control\\\" placeholder=\\\"Date of Start\\\" \\n              name=\\\"DateOfStart\\\" [(ngModel)]=\\\"newProject.dateOfStart\\\" required=\\\"required\\\" #newDateOfStart=\\\"ngModel\\\" \\n              [ngClass]=\\\"{ 'is-invalid': newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || \\n              newForm.submitted), 'is-valid': newDateOfStart.valid && (newDateOfStart.dirty || newDateOfStart.touched || \\n              newForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newDateOfStart.invalid && (newDateOfStart.dirty || newDateOfStart.touched || \\n              newForm.submitted) && newDateOfStart.errors?.required\\\">Date of Start can't be blank</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtTeamSize\\\" class=\\\"col-sm-4 col-form-label\\\">Team Size</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtTeamSize\\\" style=\\\"width:150px\\\" class=\\\"form-control\\\" placeholder=\\\"Team Size\\\" \\n              name=\\\"TeamSize\\\" [(ngModel)]=\\\"newProject.teamSize\\\" pattern=\\\"^[0-9]*$\\\" maxlength=\\\"7\\\" \\n              appTeamSizeValidator=\\\"5\\\" #newTeamSize=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newTeamSize.invalid && \\n              (newTeamSize.dirty || newTeamSize.touched || newForm.submitted), 'is-valid': newTeamSize.valid && \\n              (newTeamSize.dirty || newTeamSize.touched || newForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || \\n              newForm.submitted) && newTeamSize.errors?.required\\\">Team Size should be a number</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newTeamSize.invalid && (newTeamSize.dirty || newTeamSize.touched || \\n              newForm.submitted) && newTeamSize.errors?.divisible\\\">Team Size should be divisble by 5</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"col-sm-4 col-form-label\\\">&nbsp;</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"chkNewActive\\\" value=\\\"true\\\" class=\\\"form-check-input\\\" \\n                [(ngModel)]=\\\"newProject.active\\\" name=\\\"active\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"chkNewActive\\\">Active</label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"rbNewStatusInForce\\\" class=\\\"col-sm-4\\\">Status</label>\\n            <div class=\\\"col-sm-8\\\">\\n\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input type=\\\"radio\\\" id=\\\"rbNewStatusInForce\\\" value=\\\"In Force\\\" class=\\\"form-check-input\\\" name=\\\"Status\\\" \\n                [(ngModel)]=\\\"newProject.status\\\" required=\\\"required\\\" #newStatusInForce=\\\"ngModel\\\">\\n                <label for=\\\"rbNewStatusInForce\\\" class=\\\"form-check-label\\\">In Force</label>\\n              </div>\\n\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input type=\\\"radio\\\" id=\\\"rbNewStatusSupport\\\" value=\\\"Support\\\" class=\\\"form-check-input\\\" name=\\\"Status\\\" \\n                [(ngModel)]=\\\"newProject.status\\\" required=\\\"required\\\" #newStatusSupport=\\\"ngModel\\\">\\n                <label for=\\\"rbNewStatusSupport\\\" class=\\\"form-check-label\\\">Support</label>\\n              </div>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newStatusInForce.invalid && (newStatusInForce.dirty || newStatusInForce.touched || \\n              newForm.submitted) && newStatusInForce.errors?.required\\\">Please select status</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"drpNewClientLocation\\\" class=\\\"col-sm-4 col-form-label\\\">Client Location</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <select id=\\\"drpNewClientLocation\\\" class=\\\"form-control\\\" name=\\\"ClientLocation\\\" [(ngModel)]=\\\"newProject.clientLocationID\\\" \\n              required=\\\"required\\\" #newClientLocationID=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': newClientLocationID.invalid && \\n              (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted), 'is-valid': newClientLocationID.valid && \\n              (newClientLocationID.dirty || newClientLocationID.touched || newForm.submitted) }\\\">\\n                <option value=\\\"null\\\">Please Select</option>\\n                <option *ngFor=\\\"let clientLocation of clientLocations\\\" [value]=\\\"clientLocation.clientLocationID\\\">\\n                  {{clientLocation.clientLocationName}}\\n                </option>\\n              </select>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newClientLocationID.invalid && (newClientLocationID.dirty || newClientLocationID.touched \\n              || newForm.submitted) && newClientLocationID.errors?.required\\\">Please client location</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"newForm.invalid && (newForm.dirty || newForm.touched || newForm.submitted) \\n              && newForm.errors?.clientLocationStatus\\\">Support projects are not allowed at Tokyo</span>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" id=\\\"newFormCancel\\\">Cancel</button>\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"onSaveClick()\\\">Save</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<!-- Edit Project -->\\n<form #editForm=\\\"ngForm\\\" novalidate=\\\"novalidate\\\" appClientLocationStatusValidator>\\n  <div class=\\\"modal\\\" role=\\\"dialog\\\" id=\\\"editModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\" style=\\\"width:700px\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div class=\\\"modal-title\\\">Edit Project</div>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtEditProjectID\\\" class=\\\"col-sm-4 col-form-label\\\">Project ID</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtEditProjectID\\\" style=\\\"width:130px\\\" class=\\\"form-control-plain-text\\\" placeholder=\\\"Project ID\\\" \\n              name=\\\"ProjectID\\\" [(ngModel)]=\\\"editProject.projectID\\\" disabled=\\\"disabled\\\" required=\\\"required\\\" pattern=\\\"^[0-9]*$\\\" \\n              appProjectIDUniqueValidator #editProjectID=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': editProjectID.invalid && \\n              (editProjectID.dirty || editProjectID.touched || newForm.submitted), 'is-valid': editProjectID.valid && \\n              (editProjectID.dirty || editProjectID.touched || newForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || \\n              editForm.submitted) && editProjectID.errors?.required\\\">Project ID can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || \\n              editForm.submitted) && editProjectID.errors?.pattern\\\">Project ID should contain numbers only</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectID.invalid && (editProjectID.dirty || editProjectID.touched || \\n              editForm.submitted) && editProjectID.errors?.uniqueProjectID\\\">Duplicate Project ID</span>\\n\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtEditProjectName\\\" class=\\\"col-sm-4 col-form-label\\\">Project Name</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtEditProjectName\\\" class=\\\"form-control\\\" placeholder=\\\"Project Name\\\" name=\\\"ProjectName\\\" \\n              [(ngModel)]=\\\"editProject.projectName\\\" required=\\\"required\\\" minlength=\\\"3\\\" maxlength=\\\"30\\\" pattern=\\\"^[A-Za-z0-9 /-]*$\\\" \\n              #editProjectName=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': editProjectName.invalid && \\n              (editProjectName.dirty || editProjectName.touched || editForm.submitted), 'is-valid': editProjectName.valid && \\n              (editProjectName.dirty || editProjectName.touched || editForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || \\n              editForm.submitted) && editProjectName.errors?.required\\\">Project Name can't be blank</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || \\n              editForm.submitted) && editProjectName.errors?.pattern\\\">\\n              Project Name can contain alphabets, digits, dot, hyphen or space only</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editProjectName.invalid && (editProjectName.dirty || editProjectName.touched || \\n              editForm.submitted) && editProjectName.errors?.minlength\\\">Project name should be at least 3 characters long</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtEditDateOfStart\\\" class=\\\"col-sm-4 col-form-label\\\">Date of Start</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"date\\\" id=\\\"txtEditDateOfStart\\\" style=\\\"width:180px\\\" class=\\\"form-control\\\" placeholder=\\\"Date of Start\\\" \\n              name=\\\"DateOfStart\\\" [(ngModel)]=\\\"editProject.dateOfStart\\\" required=\\\"required\\\" #editDateOfStart=\\\"ngModel\\\" \\n              [ngClass]=\\\"{ 'is-invalid': editDateOfStart.invalid && \\n              (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted), 'is-valid': editDateOfStart.valid && \\n              (editDateOfStart.dirty || editDateOfStart.touched || editForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editDateOfStart.invalid && (editForm.submitted) && editDateOfStart.errors?.required\\\">\\n                Date of Start can't be blank</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtEditTeamSize\\\" class=\\\"col-sm-4 col-form-label\\\">Team Size</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtEditTeamSize\\\" style=\\\"width:150px\\\" class=\\\"form-control\\\" placeholder=\\\"Team Size\\\" \\n              name=\\\"TeamSize\\\" [(ngModel)]=\\\"editProject.teamSize\\\" pattern=\\\"^[0-9]*$\\\" maxlength=\\\"7\\\" appTeamSizeValidator=\\\"5\\\" \\n              #editTeamSize=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': editTeamSize.invalid && \\n              (editTeamSize.dirty || editTeamSize.touched || editForm.submitted), 'is-valid': editTeamSize.valid && \\n              (editTeamSize.dirty || editTeamSize.touched || editForm.submitted) }\\\">\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || \\n              editForm.submitted) && editTeamSize.errors?.required\\\">Team Size should be a number</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editTeamSize.invalid && (editTeamSize.dirty || editTeamSize.touched || \\n              editForm.submitted) && editTeamSize.errors?.divisible\\\">Team Size should be divisble by 5</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"col-sm-4 col-form-label\\\">&nbsp;</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <div class=\\\"form-check\\\">\\n                <input type=\\\"checkbox\\\" id=\\\"chkEditActive\\\" value=\\\"true\\\" class=\\\"form-check-input\\\" \\n                [(ngModel)]=\\\"editProject.active\\\" name=\\\"active\\\">\\n                <label class=\\\"form-check-label\\\" for=\\\"chkEditActive\\\">Active</label>\\n              </div>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"rbEditStatusInForce\\\" class=\\\"col-sm-4\\\">Status</label>\\n            <div class=\\\"col-sm-8\\\">\\n\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input type=\\\"radio\\\" id=\\\"rbEditStatusInForce\\\" value=\\\"In Force\\\" class=\\\"form-check-input\\\" name=\\\"Status\\\" \\n                [(ngModel)]=\\\"editProject.status\\\" required=\\\"required\\\" #editStatusInForce=\\\"ngModel\\\">\\n                <label for=\\\"rbEditStatusInForce\\\" class=\\\"form-check-label\\\">In Force</label>\\n              </div>\\n\\n              <div class=\\\"form-check form-check-inline\\\">\\n                <input type=\\\"radio\\\" id=\\\"rbEditStatusSupport\\\" value=\\\"Support\\\" class=\\\"form-check-input\\\" name=\\\"Status\\\" \\n                [(ngModel)]=\\\"editProject.status\\\" required=\\\"required\\\" #editStatusSupport=\\\"ngModel\\\">\\n                <label for=\\\"rbEditStatusSupport\\\" class=\\\"form-check-label\\\">Support</label>\\n              </div>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editStatusInForce.invalid && (editStatusInForce.dirty || editStatusInForce.touched || \\n              editForm.submitted) && editStatusInForce.errors?.required\\\">Please select status</span>\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"drpEditClientLocation\\\" class=\\\"col-sm-4 col-form-label\\\">Client Location</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <select id=\\\"drpEditClientLocation\\\" class=\\\"form-control\\\" name=\\\"ClientLocation\\\" [(ngModel)]=\\\"editProject.clientLocationID\\\" \\n              required=\\\"required\\\" #editClientLocationID=\\\"ngModel\\\" [ngClass]=\\\"{ 'is-invalid': editClientLocationID.invalid && \\n              (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted), 'is-valid': editClientLocationID.valid \\n              && (editClientLocationID.dirty || editClientLocationID.touched || editForm.submitted) }\\\">\\n                <option value=\\\"null\\\">Please Select</option>\\n                <option *ngFor=\\\"let clientLocation of clientLocations\\\" [value]=\\\"clientLocation.clientLocationID\\\">\\n                  {{clientLocation.clientLocationName}}\\n                </option>\\n              </select>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editClientLocationID.invalid && (editClientLocationID.dirty || \\n              editClientLocationID.touched || editForm.submitted) && editClientLocationID.errors?.required\\\">Please client location</span>\\n\\n              <span class=\\\"text-danger\\\" *ngIf=\\\"editForm.invalid && (editForm.dirty || editForm.touched || editForm.submitted) \\n              && editForm.errors?.clientLocationStatus\\\">Support projects are not allowed at Tokyo</span>\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\" id=\\\"editFormCancel\\\">Cancel</button>\\n          <button class=\\\"btn btn-success\\\" (click)=\\\"onUpdateClick()\\\">Update</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n\\n<!-- Delete Project -->\\n<form>\\n  <div class=\\\"modal\\\" role=\\\"dialog\\\" id=\\\"deleteModal\\\">\\n    <div class=\\\"modal-dialog\\\">\\n      <div class=\\\"modal-content\\\" style=\\\"width:700px\\\">\\n        <div class=\\\"modal-header\\\">\\n          <div class=\\\"modal-title\\\">Delete Project</div>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"><span>&times;</span></button>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n\\n          <div class=\\\"text-warning\\\">Are you sure to delete this Project?</div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtDeleteProjectID\\\" class=\\\"col-sm-4 col-form-label\\\">Project ID</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtDeleteProjectID\\\" style=\\\"width:100px\\\" class=\\\"form-control-plain-text\\\" placeholder=\\\"Project ID\\\" \\n              name=\\\"ProjectID\\\" [(ngModel)]=\\\"deleteProject.projectID\\\" disabled=\\\"disabled\\\">\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"txtDeleteProjectName\\\" class=\\\"col-sm-4 col-form-label\\\">Project Name</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"txtDeleteProjectName\\\" class=\\\"form-control-plain-text\\\" placeholder=\\\"Project Name\\\" \\n              name=\\\"ProjectName\\\" [(ngModel)]=\\\"deleteProject.projectName\\\" disabled=\\\"disabled\\\">\\n            </div>\\n          </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button class=\\\"btn btn-warning\\\" data-dismiss=\\\"modal\\\">Cancel</button>\\n          <button class=\\\"btn btn-success\\\" data-dismiss=\\\"modal\\\" (click)=\\\"onDeleteConfirmClick()\\\">Delete</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\"","export default \"<nav class=\\\"navbar navbar-expand-sm bg-success navbar-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">\\n        Angular Task Manager\\n    </a>\\n    <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#mynav\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"mynav\\\">\\n        <ul class=\\\"navbar-nav mr-auto\\\">\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName != null\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"dashboard\\\">Dashboard</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"about\\\">About</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName != null\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"projects\\\">Projects</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName != null\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\">{{loginService.currentUserName}}</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName != null\\\">\\n                <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"loginService.Logout()\\\">Logout</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName == null\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"login\\\">Login</a>\\n            </li>\\n            <li class=\\\"nav-item\\\" *ngIf=\\\"loginService.currentUserName == null\\\">\\n                <a class=\\\"nav-link\\\" routerLink=\\\"signup\\\">Sign Up</a>\\n            </li>\\n        </ul>\\n        <form class=\\\"form-inline my-2 my-lg-0\\\">\\n            <div class=\\\"input-group\\\">\\n                <div class=\\\"input-group-prepend\\\">\\n                    <span class=\\\"input-group-text\\\" id=\\\"search\\\"><i class=\\\"fa fa-search\\\"></i></span>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\">\\n            </div>\\n            <button class=\\\"btn btn-warning my2- my-sm-0\\\" type=\\\"button\\\" (click)=\\\"onSearchClick()\\\">Search</button>\\n        </form>\\n    </div>\\n</nav>\\n\\n<div class=\\\"container-fluid\\\">\\n    <router-outlet></router-outlet>\\n</div>\"","export default \"<form>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-6 col-xl-5 col-md-9 mx-auto\\\">\\n        <div class=\\\"card mt-4\\\">\\n          <div class=\\\"card-header bg-secondary text-white\\\">\\n            <h3>Login</h3>\\n          </div>\\n          <div class=\\\"card-body\\\">\\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"UserName\\\" class=\\\"col-md-4 col-form-label\\\">Username</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Username\\\" [(ngModel)]=\\\"loginViewModel.UserName\\\" name=\\\"UserName\\\" autofocus=\\\"autofocus\\\">\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"Password\\\" class=\\\"col-md-4 col-form-label\\\">Password</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"loginViewModel.Password\\\" name=\\\"Password\\\">\\n              </div>\\n            </div>\\n  \\n          </div>\\n  \\n          <div class=\\\"card-footer text-right\\\">\\n            <span class=\\\"text-danger\\\">{{loginError}}&nbsp;</span>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"onLoginClick($event)\\\">Login</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </form>\"","export default \"<div class=\\\"row\\\">\\n    <div class=\\\"col-md-8 col-xl-6 mx-auto\\\">\\n  \\n      <form [formGroup]=\\\"signUpForm\\\" (ngSubmit)=\\\"onSubmitClick()\\\">\\n  \\n        <div class=\\\"card mt-1\\\">\\n          <div class=\\\"card-header\\\">\\n            <h4>Sign Up</h4>\\n          </div>\\n  \\n          <div class=\\\"card-body\\\">\\n  \\n            <div class=\\\"form-group form-row\\\" formGroupName=\\\"personName\\\">\\n              <label for=\\\"firstName\\\" class=\\\"col-md-4 col-form-label\\\">First Name:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"text\\\" name=\\\"firstName\\\" id=\\\"firstName\\\" placeholder=\\\"First Name\\\" class=\\\"form-control\\\" formControlName=\\\"firstName\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('personName.firstName').valid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.required\\\">First name can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.firstName').invalid && (signUpForm.get('personName.firstName').dirty || signUpForm.get('personName.firstName').touched || signUpForm.submitted) && signUpForm.get('personName.firstName').errors?.minlength\\\">First name should contain at least 2 characters</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\" formGroupName=\\\"personName\\\">\\n              <label for=\\\"lastName\\\" class=\\\"col-md-4 col-form-label\\\">Last Name:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"text\\\" name=\\\"lastName\\\" id=\\\"lastName\\\" placeholder=\\\"Last Name\\\" class=\\\"form-control\\\" formControlName=\\\"lastName\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('personName.lastName').valid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.required\\\">Last name can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('personName.lastName').invalid && (signUpForm.get('personName.lastName').dirty || signUpForm.get('personName.lastName').touched || signUpForm.submitted) && signUpForm.get('personName.lastName').errors?.minlength\\\">Last name should contain at least 2 characters</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"email\\\" class=\\\"col-md-4 col-form-label\\\">Email:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"text\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email\\\" class=\\\"form-control\\\" formControlName=\\\"email\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('email').valid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.required\\\">Email can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('email').invalid && (signUpForm.get('email').dirty || signUpForm.get('email').touched || signUpForm.submitted) && signUpForm.get('email').errors?.email\\\">Email is invalid</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"mobile\\\" class=\\\"col-md-4 col-form-label\\\">Mobile:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"text\\\" name=\\\"mobile\\\" id=\\\"mobile\\\" placeholder=\\\"Mobile\\\" class=\\\"form-control\\\" formControlName=\\\"mobile\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('mobile').valid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.required\\\">Mobile can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('mobile').invalid && (signUpForm.get('mobile').dirty || signUpForm.get('mobile').touched || signUpForm.submitted) && signUpForm.get('mobile').errors?.pattern\\\">Mobile is invalid</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"dateOfBirth\\\" class=\\\"col-md-4 col-form-label\\\">Date of Birth:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"date\\\" name=\\\"dateOfBirth\\\" id=\\\"dateOfBirth\\\" placeholder=\\\"Date of Birth\\\" class=\\\"form-control\\\" formControlName=\\\"dateOfBirth\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('dateOfBirth').valid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.required\\\">Date of Birth can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('dateOfBirth').invalid && (signUpForm.get('dateOfBirth').dirty || signUpForm.get('dateOfBirth').touched || signUpForm.submitted) && signUpForm.get('dateOfBirth').errors?.minAge\\\">Minimum Age must be 18</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"password\\\" class=\\\"col-md-4 col-form-label\\\">Password:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"password\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\" class=\\\"form-control\\\" formControlName=\\\"password\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('password').valid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('password').invalid && (signUpForm.get('password').dirty || signUpForm.get('password').touched || signUpForm.submitted) && signUpForm.get('password').errors?.required\\\">Password can't be blank</span>\\n              </div>\\n            </div>\\n  \\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"confirmPassword\\\" class=\\\"col-md-4 col-form-label\\\">Confirm Password:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"password\\\" name=\\\"confirmPassword\\\" id=\\\"confirmPassword\\\" placeholder=\\\"Confirm Password\\\" class=\\\"form-control\\\" formControlName=\\\"confirmPassword\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('confirmPassword').valid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) }\\\">\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('confirmPassword').invalid && (signUpForm.get('confirmPassword').dirty || signUpForm.get('confirmPassword').touched || signUpForm.submitted) && signUpForm.get('confirmPassword').errors?.required\\\">Confirm Password can't be blank</span>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.invalid && (signUpForm.dirty || signUpForm.touched || signUpForm.submitted) && signUpForm.errors?.compareValidator\\\">Password and Confirm Password do not match</span>\\n              </div>\\n            </div>\\n  \\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label class=\\\"col-md-4 col-form-label\\\">Gender:</label>\\n              <div class=\\\"col-md-8\\\">\\n  \\n                <div class=\\\"form-check-label form-check-inline\\\" *ngFor=\\\"let gender of genders\\\">\\n                  <input type=\\\"radio\\\" name=\\\"gender\\\" [id]=\\\"gender\\\" [value]=\\\"gender\\\" class=\\\"form-check-input\\\" formControlName=\\\"gender\\\">\\n                  <label [for]=\\\"gender\\\" class=\\\"form-check-label\\\">{{gender}}</label>\\n                </div>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('gender').invalid && (signUpForm.get('gender').dirty || signUpForm.get('gender').touched || signUpForm.submitted) && signUpForm.get('gender').errors?.required\\\">Please select gender</span>\\n  \\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label for=\\\"countryID\\\" class=\\\"col-md-4 col-form-label\\\">Country:</label>\\n              <div class=\\\"col-md-8\\\">\\n                <select name=\\\"countryID\\\" id=\\\"countryID\\\" class=\\\"form-control\\\" formControlName=\\\"countryID\\\" [ngClass]=\\\"{\\n                  'is-invalid': signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted),\\n  \\n                  'is-valid': signUpForm.get('countryID').valid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) }\\\">\\n                  <option value=\\\"null\\\">Please Select</option>\\n                  <option *ngFor=\\\"let country of countries\\\" [value]=\\\"country.countryID\\\">\\n                    {{country.countryName}}\\n                  </option>\\n                </select>\\n  \\n                <span class=\\\"text-danger\\\" *ngIf=\\\"signUpForm.get('countryID').invalid && (signUpForm.get('countryID').dirty || signUpForm.get('countryID').touched || signUpForm.submitted) && signUpForm.get('countryID').errors?.required\\\">Please select country</span>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label class=\\\"col-md-4 col-form-label\\\"></label>\\n              <div class=\\\"col-md-8\\\">\\n                <input type=\\\"checkbox\\\" name=\\\"receiveNewsLetters\\\" id=\\\"receiveNewsLetters\\\" value=\\\"true\\\" class=\\\"form-check-input\\\" formControlName=\\\"receiveNewsLetters\\\">\\n                <label for=\\\"receiveNewsLetters\\\" class=\\\"form-check-label\\\">Receive News Letters</label>\\n              </div>\\n            </div>\\n  \\n            <div class=\\\"form-group form-row\\\">\\n              <label class=\\\"col-md-4 col-form-label\\\">Skills:</label>\\n              <div class=\\\"col-md-8\\\" formArrayName=\\\"skills\\\">\\n                <div class=\\\"row\\\" *ngFor=\\\"let skill of signUpForm.get('skills').controls; let i = index\\\" [formGroupName]=\\\"i\\\">\\n  \\n                  <div class=\\\"col-5\\\">\\n                    <input type=\\\"text\\\" name=\\\"skillName\\\" id=\\\"skillName\\\" placeholder=\\\"Skill Name\\\" formControlName=\\\"skillName\\\" class=\\\"form-control\\\" [ngClass]=\\\"{\\n                      'is-invalid': skill.get('skillName').invalid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted),\\n      \\n                      'is-valid': skill.get('skillName').valid && (skill.get('skillName').dirty || skill.get('skillName').touched || signUpForm.submitted) }\\\">\\n                  </div>\\n  \\n                  <div class=\\\"col-4\\\">\\n                    <select name=\\\"level\\\" id=\\\"level\\\" formControlName=\\\"level\\\" class=\\\"form-control\\\" [ngClass]=\\\"{\\n                      'is-invalid': skill.get('level').invalid && (skill.get('level').dirty || skill.get('level').touched || signUpForm.submitted),\\n      \\n                      'is-valid': skill.get('level').valid && (skill.get('level').dirty || skill.get('level').touched || signUpForm.submitted) }\\\">\\n                      <option value=\\\"null\\\">Please Select</option>\\n                      <option value=\\\"Beginner\\\">Beginner</option>\\n                      <option value=\\\"Intermediate\\\">Intermediate</option>\\n                      <option value=\\\"Professional\\\">Professional</option>\\n                      <option value=\\\"Expert\\\">Expert</option>\\n                    </select>\\n                  </div>\\n  \\n                  <div class=\\\"col-3\\\">\\n                    <button class=\\\"btn btn-danger\\\" type=\\\"button\\\" (click)=\\\"onRemoveClick(i)\\\">Remove</button>\\n                  </div>\\n                </div>\\n  \\n                <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" (click)=\\\"onAddSkill()\\\">Add Skill</button>\\n              </div>\\n  \\n            </div>\\n  \\n            <!-- {{signUpForm.value | json}} -->\\n          </div>\\n  \\n          <div class=\\\"card-footer\\\">\\n            <button class=\\\"btn btn-success float-right\\\">Create Account</button>\\n            <div class=\\\"text-danger\\\">{{registerError}}</div>\\n          </div>\\n  \\n        </div>\\n  \\n      </form>\\n    </div>\\n  </div>\"","export default \"<p>tasks works!</p>\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Fib3V0L2Fib3V0LmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.scss']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MyProfileComponent } from './my-profile/my-profile.component';\nimport { AboutComponent } from './about/about.component';\nimport { DashboardService } from '../dashboard.service';\nimport { ProjectsComponent } from './projects/projects.component';\nimport { FormsModule } from '@angular/forms';\nimport { TeamSizeValidatorDirective } from '../team-size-validator.directive';\nimport { ClientLocationStatusValidatorDirective } from '../client-location-status-validator.directive';\nimport { ProjectIDUniqueValidatorDirective } from '../project-idunique-validator.directive';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective\n  ],\n  imports: [ CommonModule, FormsModule ],\n  exports: [\n    DashboardComponent,\n    MyProfileComponent,\n    AboutComponent,\n    ProjectsComponent,\n    TeamSizeValidatorDirective,\n    ClientLocationStatusValidatorDirective,\n    ProjectIDUniqueValidatorDirective\n   ],\n  providers: [ DashboardService ]\n})\nexport class AdminModule\n{\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { DashboardService } from '../../dashboard.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.scss']\n})\nexport class DashboardComponent implements OnInit {\n  Designation: string;\n  Username: string;\n  NoOfTeamMembers: number;\n  TotalCostOfAllProjects: number;\n  PendingTasks: number;\n  UpComingProjects: number;\n  ProjectCost: number;\n  CurrentExpenditure: number;\n  AvailableFunds: number;\n  ToDay: Date;\n\n  Clients: string[];\n  Projects: string[];\n  Years: number[] = [];\n  TeamMembersSummary = [];\n  TeamMembers = [];\n\n  constructor(private dashboardService: DashboardService) {\n\n  }\n\n  ngOnInit() {\n    this.Designation = \"Team Leader\";\n    this.Username = \"Scott Smith\";\n    this.NoOfTeamMembers = 67;\n    this.TotalCostOfAllProjects = 240;\n    this.PendingTasks = 15;\n    this.UpComingProjects = 0.2;\n    this.ProjectCost = 2113507;\n    this.CurrentExpenditure = 96788;\n    this.AvailableFunds = 52536;\n    this.ToDay = new Date();\n\n    this.Clients = [\n      \"ABC Infotech Ltd.\", \"DEF Software Solutions\", \"GHI Industries\"\n    ];\n\n    this.Projects = [\n      \"Project A\", \"Project B\", \"Project C\", \"Project D\"\n    ];\n\n    for (var i = 2019; i >= 2010; i--) {\n      this.Years.push(i);\n    }\n\n    this.TeamMembersSummary = this.dashboardService.getTeamMembersSummery();\n\n\n    this.TeamMembers = [\n      {\n        Region: \"East\", Members: [\n          { ID: 1, Name: \"Ford\", Status: \"Available\" },\n          { ID: 2, Name: \"Miller\", Status: \"Available\" },\n          { ID: 3, Name: \"Jones\", Status: \"Busy\" },\n          { ID: 4, Name: \"James\", Status: \"Busy\" }\n        ]\n      },\n      {\n        Region: \"West\", Members: [\n          { ID: 5, Name: \"Anna\", Status: \"Available\" },\n          { ID: 6, Name: \"Arun\", Status: \"Available\" },\n          { ID: 7, Name: \"Varun\", Status: \"Busy\" },\n          { ID: 8, Name: \"Jasmine\", Status: \"Busy\" }\n        ]\n      },\n      {\n        Region: \"South\", Members: [\n          { ID: 9, Name: \"Krishna\", Status: \"Available\" },\n          { ID: 10, Name: \"Mohan\", Status: \"Available\" },\n          { ID: 11, Name: \"Raju\", Status: \"Busy\" },\n          { ID: 12, Name: \"Farooq\", Status: \"Busy\" }\n        ]\n      },\n      {\n        Region: \"North\", Members: [\n          { ID: 13, Name: \"Jacob\", Status: \"Available\" },\n          { ID: 14, Name: \"Smith\", Status: \"Available\" },\n          { ID: 15, Name: \"Jones\", Status: \"Busy\" },\n          { ID: 16, Name: \"James\", Status: \"Busy\" }\n        ]\n      }\n    ];\n  }\n\n  onProjectChange($event)\n  {\n    if ($event.target.innerHTML == \"Project A\")\n    {\n      this.ProjectCost = 2113507;\n      this.CurrentExpenditure = 96788;\n      this.AvailableFunds = 52436;\n    }\n    else if ($event.target.innerHTML == \"Project B\") {\n      this.ProjectCost = 88923;\n      this.CurrentExpenditure = 22450;\n      this.AvailableFunds = 2640;\n    }\n    else if ($event.target.innerHTML == \"Project C\")\n    {\n      this.ProjectCost = 662183;\n      this.CurrentExpenditure = 7721;\n      this.AvailableFunds = 9811;\n    }\n    else if ($event.target.innerHTML == \"Project D\")\n    {\n      this.ProjectCost = 928431;\n      this.CurrentExpenditure = 562;\n      this.AvailableFunds = 883;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL215LXByb2ZpbGUvbXktcHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-my-profile',\n  templateUrl: './my-profile.component.html',\n  styleUrls: ['./my-profile.component.scss']\n})\nexport class MyProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FkbWluL3Byb2plY3RzL3Byb2plY3RzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { ProjectsService } from '../../projects.service';\nimport { Project } from '../../project';\nimport { ClientLocation } from '../../client-location';\nimport { ClientLocationsService } from '../../client-locations.service';\nimport { NgForm } from '@angular/forms';\nimport * as $ from 'jquery';\n\n\n@Component({\n  selector: 'app-projects',\n  templateUrl: './projects.component.html',\n  styleUrls: ['./projects.component.scss']\n})\nexport class ProjectsComponent implements OnInit\n{\n  projects: Project[] = [];\n  clientLocations: ClientLocation[] = [];\n  showLoading: boolean = true;\n\n  newProject: Project = new Project();\n  editProject: Project = new Project();\n  editIndex: number = null;\n  deleteProject: Project = new Project();\n  deleteIndex: number = null;\n  searchBy: string = \"ProjectName\";\n  searchText: string = \"\";\n\n  @ViewChild(\"newForm\", {static: false }) newForm: NgForm;\n  @ViewChild(\"editForm\", {static: false}) editForm: NgForm;\n\n  constructor(private projectsService: ProjectsService, private clientLocationsService: ClientLocationsService)\n  {\n  }\n\n  ngOnInit()\n  {\n    this.projectsService.getAllProjects().subscribe(\n      (response: Project[]) =>\n      {\n        this.projects = response;\n        this.showLoading = false;\n      }\n    );\n\n    this.clientLocationsService.getClientLocations().subscribe(\n      (response) => {\n        this.clientLocations = response;\n      }\n    );\n  }\n  onNewClick(event)\n  {\n    this.newForm.resetForm();\n  }\n\n  onSaveClick()\n  {\n    if (this.newForm.valid)\n    {\n      this.newProject.clientLocation.clientLocationID = 0;\n      this.projectsService.insertProject(this.newProject).subscribe((response) =>\n      {\n        //Add Project to Grid\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects.push(p);\n\n        //Clear New Project Dialog - TextBoxes\n        this.newProject.projectID = null;\n        this.newProject.projectName = null;\n        this.newProject.dateOfStart = null;\n        this.newProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"#newFormCancel\").trigger(\"click\");\n      }, (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onEditClick(event, index: number)\n  {\n    this.editForm.resetForm();\n    setTimeout(() =>\n    {\n      this.editProject.projectID = this.projects[index].projectID;\n      this.editProject.projectName = this.projects[index].projectName;\n      this.editProject.dateOfStart = this.projects[index].dateOfStart.split(\"/\").reverse().join(\"-\"); //yyyy-MM-dd\n      this.editProject.teamSize = this.projects[index].teamSize;\n      this.editProject.active = this.projects[index].active;\n      this.editProject.clientLocationID = this.projects[index].clientLocationID;\n      this.editProject.clientLocation = this.projects[index].clientLocation;\n      this.editProject.status = this.projects[index].status;\n      this.editIndex = index;\n    }, 100);\n  }\n\n  onUpdateClick()\n  {\n    if (this.editForm.valid)\n    {\n      this.projectsService.updateProject(this.editProject).subscribe((response: Project) =>\n      {\n        var p: Project = new Project();\n        p.projectID = response.projectID;\n        p.projectName = response.projectName;\n        p.dateOfStart = response.dateOfStart;\n        p.teamSize = response.teamSize;\n        p.clientLocation = response.clientLocation;\n        p.active = response.active;\n        p.clientLocationID = response.clientLocationID;\n        p.status = response.status;\n        this.projects[this.editIndex] = p;\n\n        this.editProject.projectID = null;\n        this.editProject.projectName = null;\n        this.editProject.dateOfStart = null;\n        this.editProject.teamSize = null;\n        this.newProject.active = false;\n        this.newProject.clientLocationID = null;\n        this.newProject.status = null;\n\n        $(\"#editFormCancel\").trigger(\"click\");\n      },\n        (error) =>\n        {\n          console.log(error);\n        });\n    }\n  }\n\n  onDeleteClick(event, index: number)\n  {\n    this.deleteIndex = index;\n    this.deleteProject.projectID = this.projects[index].projectID;\n    this.deleteProject.projectName = this.projects[index].projectName;\n    this.deleteProject.dateOfStart = this.projects[index].dateOfStart;\n    this.deleteProject.teamSize = this.projects[index].teamSize;\n  }\n\n  onDeleteConfirmClick()\n  {\n    this.projectsService.deleteProject(this.deleteProject.projectID).subscribe(\n      (response) =>\n      {\n        this.projects.splice(this.deleteIndex, 1);\n        this.deleteProject.projectID = null;\n        this.deleteProject.projectName = null;\n        this.deleteProject.teamSize = null;\n        this.deleteProject.dateOfStart = null;\n      },\n      (error) =>\n      {\n        console.log(error);\n      });\n  }\n\n  onSearchClick()\n  {\n    this.projectsService.SearchProjects(this.searchBy, this.searchText).subscribe(\n      (response: Project[]) =>\n      {\n        this.projects = response;\n      },\n      (error) => \n      {\n        console.log(error);\n      });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { DashboardComponent } from './admin/dashboard/dashboard.component';\nimport { AboutComponent } from './admin/about/about.component';\nimport { ProjectsComponent } from './admin/projects/projects.component';\nimport { LoginComponent } from './login/login.component';\nimport { CanActivateGuardService } from './can-activate-guard.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\nconst routes: Routes = [\n  { path: \"\", redirectTo: \"login\", pathMatch: \"full\" },\n  { path: \"login\", component: LoginComponent },\n  { path: \"signup\", component: SignUpComponent },\n  { path: \"dashboard\", component: DashboardComponent, canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Admin\" } },\n  { path: \"about\", component: AboutComponent },\n  { path: \"projects\", component: ProjectsComponent, canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Admin\" } },\n  { path: \"tasks\", component: TasksComponent, canActivate: [ CanActivateGuardService ], data: { expectedRole: \"Employee\" } },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule\n{\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\nimport { LoginService } from './login.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent\n{\n  constructor(private loginService : LoginService)\n  {\n  }\n\n  onSearchClick()\n  {\n    console.log(this.loginService.currentUserName);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { JwtModule } from \"@auth0/angular-jwt\";\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { AdminModule } from './admin/admin.module';\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { LoginComponent } from './login/login.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { JwtInterceptorService } from './jwt-interceptor.service';\nimport { JwtUnAuthorizedInterceptorService } from './jwt-un-authorized-interceptor.service';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { TasksComponent } from './tasks/tasks.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    SignUpComponent,\n    TasksComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    AdminModule,\n    FormsModule,\n    ReactiveFormsModule,\n    JwtModule.forRoot( {\n      config: {\n        tokenGetter: () => {\n          return (sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null)\n        }\n      }\n    })\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtInterceptorService,\n      multi: true\n    },\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: JwtUnAuthorizedInterceptorService,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { LoginService } from './login.service';\nimport { Router, CanActivate, ActivatedRouteSnapshot } from '@angular/router';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CanActivateGuardService implements CanActivate\n{\n  constructor(private loginService : LoginService, private router : Router, private jwtHelperService : JwtHelperService)\n  {\n  }\n\n  canActivate(route: ActivatedRouteSnapshot) : boolean\n  {\n    //console.log(this.router.url);\n    var token = sessionStorage.getItem(\"currentUser\")? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.loginService.isAuthenticated() && this.jwtHelperService.decodeToken(token).role == route.data.expectedRole)\n    {\n      return true; //the user can navigate to the particular route\n    }\n    else\n    {\n      this.router.navigate([ \"login\" ]);\n      return false; //the user can't navigate to the particular route\n    }\n  }\n}\n","import { Directive } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors } from '@angular/forms';\n\n@Directive({\n  selector: '[appClientLocationStatusValidator]',\n  providers: [ { provide: NG_VALIDATORS, useExisting: ClientLocationStatusValidatorDirective, multi: true }]\n})\nexport class ClientLocationStatusValidatorDirective implements Validator\n{\n  constructor()\n  {\n  }\n\n  validate(control: AbstractControl) : ValidationErrors | null\n  {\n    let isValid = true;\n    if (control.value.ClientLocation == 6 && control.value.Status == \"Support\")\n    {\n      isValid = false; //indicates invalid\n    }\n\n    if (isValid == true)\n    {\n      return null; //valid\n    }\n    else\n    {\n      return { clientLocationStatus: { valid: false }}; //invalid\n    }\n  }\n\n}\n","export class ClientLocation {\n    clientLocationID: number;\n    clientLocationName: string;\n\n    constructor() {\n        this.clientLocationID = null;\n        this.clientLocationName = null;\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { ClientLocation } from './client-location';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ClientLocationsService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getClientLocations(): Observable<ClientLocation[]> {\n\n    return this.httpClient.get<ClientLocation[]>(\"/api/clientlocations\", {responseType: \"json\"});\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Country } from './country';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CountriesService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getCountries(): Observable<Country[]> {\n    return this.httpClient.get<Country[]>(\"/api/countries\", { responseType: \"json\" });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { ValidatorFn, AbstractControl, ValidationErrors, FormGroup } from '@angular/forms';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomValidatorsService\n{\n  constructor() { }\n\n  public minimumAgeValidator(minAge: number): ValidatorFn\n  {\n    return (control: AbstractControl): ValidationErrors | null =>\n    {\n      if (!control.value) {\n        return null;\n      }\n\n      var today = new Date();\n      var dateOfBirth = new Date(control.value);\n      var diffMilliSeconds = Math.abs(today.getTime() - dateOfBirth.getTime());\n      var diffYears = (diffMilliSeconds / (1000 * 60 * 60 * 24)) / 365.25;\n\n      if (diffYears >= minAge) {\n        return null;\n      }\n      else {\n        return { minAge: { valid: false } };\n      }\n    };\n  }\n\n  public compareValidator(controlToValidate: string, controlToCompare: string): ValidatorFn {\n    return (formGroup: FormGroup): ValidationErrors | null => {\n      if (!formGroup.get(controlToValidate).value) {\n        return null;\n      }\n\n      if (formGroup.get(controlToValidate).value == formGroup.get(controlToCompare).value) {\n        return null;\n      }\n      else {\n        formGroup.get(controlToValidate).setErrors( { compareValidator: { valid: false }});\n        return { compareValidator: { valid: false } };\n      }\n    };\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class DashboardService {\n\n  getTeamMembersSummery(): any[] {\n    var TeamMembersSummary = [\n      { Region: \"East\", TeamMembersCount: 20, TemporarilyUnavailableMembers: 4 },\n      { Region: \"West\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 8 },\n      { Region: \"South\", TeamMembersCount: 17, TemporarilyUnavailableMembers: 1 },\n      { Region: \"North\", TeamMembersCount: 15, TemporarilyUnavailableMembers: 6 }\n    ];\n    return TeamMembersSummary;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request : HttpRequest<any>, next : HttpHandler) : Observable<HttpEvent<any>>\n  {\n    var currentUser = { token: \"\" };\n    if (sessionStorage.currentUser != null)\n    {\n      currentUser = JSON.parse(sessionStorage.currentUser);\n    }\n\n    request = request.clone({\n      setHeaders: {\n        Authorization: \"Bearer \" + currentUser.token\n      }}\n    );\n\n    return next.handle(request);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class JwtUnAuthorizedInterceptorService implements HttpInterceptor\n{\n  constructor()\n  {\n  }\n\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>\n  {\n    return next.handle(request).pipe(tap(\n\n      (event: HttpEvent<any>) =>\n      {\n        if (event instanceof HttpResponse)\n        {\n          //do something with response\n        }\n      },\n\n      (error: any) =>\n      {\n        if (error instanceof HttpErrorResponse)\n        {\n          if (error.status == 401)\n          {\n            console.log(error);\n            alert(\"401 UnAuthorized\");\n          }\n        }\n      }\n\n    ));\n  }\n}\n\n\n","export class LoginViewModel\n{\n    UserName: string;\n    Password: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpBackend } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { LoginViewModel } from './login-view-model';\nimport { map } from 'rxjs/operators';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { SignUpViewModel } from './sign-up-view-model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n  private httpClient: HttpClient;\n\n  constructor(private httpBackend: HttpBackend, private jwtHelperService: JwtHelperService)\n  {\n  }\n\n  currentUserName: string  = null;\n\n  public Login(loginViewModel: LoginViewModel): Observable<any>\n  {\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/authenticate\", loginViewModel, { responseType: \"json\" })\n    .pipe(map(user => {\n      if (user) {\n        this.currentUserName = user.userName;\n        sessionStorage.currentUser = JSON.stringify(user);\n      }\n      return user;\n    }));\n  }\n\n  public Register(signUpViewModel: SignUpViewModel): Observable<any> {\n\n    this.httpClient = new HttpClient(this.httpBackend);\n    return this.httpClient.post<any>(\"/register\", signUpViewModel, { responseType: \"json\" })\n    .pipe(map(user => {\n      if (user) {\n        this.currentUserName = user.userName;\n        sessionStorage.currentUser = JSON.stringify(user);\n      }\n      return user;\n    }));\n  }\n\n  public Logout() {\n    sessionStorage.removeItem(\"currentUser\");\n    this.currentUserName = null;\n  }\n\n  public isAuthenticated(): boolean {\n    var token = sessionStorage.getItem(\"currentUser\") ? JSON.parse(sessionStorage.getItem(\"currentUser\")).token : null;\n    if (this.jwtHelperService.isTokenExpired()) {\n      return false;\n    }\n    else {\n      return true;\n    }\n  }\n}\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { LoginViewModel } from '../login-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit\n{\n  loginViewModel: LoginViewModel = new LoginViewModel();\n  loginError: string = \"\";\n\n  constructor(private loginService: LoginService, private router : Router) \n  {\n  }\n\n  ngOnInit()\n  {\n  }\n\n  onLoginClick(event)\n  {\n    this.loginService.Login(this.loginViewModel).subscribe(\n      (response) => {\n        this.router.navigateByUrl(\"/dashboard\");\n      },\n      (error) => {\n        console.log(error);\n        this.loginError = \"Invalid Username or Password\";\n      },\n    );\n  }\n\n}\n","import { Directive } from '@angular/core';\nimport { NG_ASYNC_VALIDATORS, AsyncValidator, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ProjectsService } from './projects.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Project } from './project';\n\n@Directive({\n  selector: '[appProjectIDUniqueValidator]',\n  providers: [ { provide: NG_ASYNC_VALIDATORS, useExisting: ProjectIDUniqueValidatorDirective, multi: true }]\n})\nexport class ProjectIDUniqueValidatorDirective implements AsyncValidator\n{\n  constructor(private projectsService: ProjectsService)\n  {\n  }\n\n  validate(control: AbstractControl) : Observable<ValidationErrors | null>\n  {\n    return this.projectsService.getProjectByProjectID(control.value).pipe(map( (existingProject: Project) => {\n      if (existingProject != null)\n      {\n        return { uniqueProjectID: { valid: false }};\n      }\n      else\n      {\n        return null;\n      }\n    }));\n  }\n}\n","import { ClientLocation } from './client-location';\n\nexport class Project {\n    projectID: number;\n    projectName: string;\n    dateOfStart: string;\n    teamSize: number;\n    active: boolean;\n    status: string;\n    clientLocationID: number;\n    clientLocation: ClientLocation;\n\n    constructor() {\n        this.projectID = null;\n        this.projectName = null;\n        this.dateOfStart = null;\n        this.teamSize = null;\n        this.active = null;\n        this.status = null;\n        this.clientLocationID = null;\n        this.clientLocation = new ClientLocation(); \n    }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable } from 'rxjs';\nimport { Project } from './project';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectsService {\n  constructor(private httpClient: HttpClient) {\n  }\n\n  getAllProjects(): Observable<Project[]> {\n    return this.httpClient.get<Project[]>(\"/api/projects\", { responseType: \"json\" })\n    .pipe(map(\n      (data: Project[]) => {\n        return data;\n      }\n    ));\n  }\n  getProjectByProjectID(ProjectID: number): Observable<Project> {\n    return this.httpClient.get<Project>(\"/api/projects/searchbyprojectid/\" + ProjectID, {responseType: \"json\"});\n  }\n\n  insertProject(newProject: Project): Observable<Project> {\n    return this.httpClient.post<Project>(\"/api/projects\", newProject, { responseType: \"json\" });\n  }\n\n  updateProject(existingProject: Project) : Observable<Project> {\n    return this.httpClient.put<Project>(\"/api/projects\", existingProject, { responseType: \"json\" });\n  }\n\n  deleteProject(ProjectID: number) : Observable<string> {\n    return this.httpClient.delete<string>(\"/api/projects?ProjectID=\" + ProjectID);\n  }\n\n  SearchProjects(searchBy: string, searchText: string) : Observable<Project[]> {\n    return this.httpClient.get<Project[]>(\"/api/projects/search/\" + searchBy + \"/\" + searchText, { responseType: \"json\" });\n  }\n}\n\n\n\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, FormArray, FormBuilder, Validators } from '@angular/forms';\nimport { CountriesService } from '../countries.service';\nimport { Country } from '../country';\nimport { CustomValidatorsService } from '../custom-validators.service';\nimport { SignUpViewModel } from '../sign-up-view-model';\nimport { LoginService } from '../login.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit\n{\n  signUpForm: FormGroup;\n  genders = [\"male\", \"female\"];\n  countries: Country[] = [];\n  registerError: string = null;\n\n  constructor(private countriesService: CountriesService, private formBuilder: FormBuilder,\n              private customValidatorsService: CustomValidatorsService, private loginService: LoginService, private router: Router) {\n  }\n\n  ngOnInit() {\n    this.countriesService.getCountries().subscribe((response) => {\n      this.countries = response;\n    });\n\n    this.signUpForm = this.formBuilder.group({\n      personName: this.formBuilder.group({\n        firstName: [null, [Validators.required, Validators.minLength(2)]],\n        lastName: [null, [Validators.required, Validators.minLength(2)]],\n      }),\n\n      email: [null, [Validators.required, Validators.email]],\n      mobile: [null, [Validators.required, Validators.pattern(/^[789]\\d{9}$/)]],\n      dateOfBirth: [null, [Validators.required, this.customValidatorsService.minimumAgeValidator(18)]],\n      password: [null, [Validators.required]],\n      confirmPassword: [null, [Validators.required]],\n      gender: [null, [Validators.required]],\n      countryID: [null, [Validators.required]],\n      receiveNewsLetters: [null],\n      skills: this.formBuilder.array([])\n    }, {\n        validators: [\n          this.customValidatorsService.compareValidator(\"confirmPassword\", \"password\")\n        ]\n      });\n\n    this.signUpForm.valueChanges.subscribe((value) => {\n    });\n  }\n\n  onSubmitClick() {\n\n    this.signUpForm[\"submitted\"] = true;\n    console.log(this.signUpForm);\n\n    if (this.signUpForm.valid) {\n      var signUpVieModel = this.signUpForm.value as SignUpViewModel;\n      this.loginService.Register(signUpVieModel).subscribe(\n        (response) => { this.router.navigate( [ \"tasks\" ]); },\n        (error) => {\n          console.log(error);\n          this.registerError = \"Unable to submit\";\n        });\n    }\n  }\n\n  onAddSkill()\n  {\n    var formGroup = new FormGroup({\n      skillName: new FormControl(null, [Validators.required]),\n      skillLevel: new FormControl(null, [Validators.required])\n    });\n\n    (<FormArray>this.signUpForm.get(\"skills\")).push(formGroup);\n  }\n\n  onRemoveClick(index: number)\n  {\n    (<FormArray>this.signUpForm.get(\"skills\")).removeAt(index);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2tzL3Rhc2tzLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-tasks',\n  templateUrl: './tasks.component.html',\n  styleUrls: ['./tasks.component.scss']\n})\nexport class TasksComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Directive, Input } from '@angular/core';\nimport { NG_VALIDATORS, Validator, AbstractControl, ValidationErrors} from '@angular/forms';\n\n@Directive({\n  selector: '[appTeamSizeValidator]',\n  providers: [ {\n    provide: NG_VALIDATORS,\n    useExisting: TeamSizeValidatorDirective,\n    multi: true\n  }]\n})\nexport class TeamSizeValidatorDirective implements Validator {\n\n  constructor() { }\n  @Input(\"appTeamSizeValidator\") n: number;\n\n  validate(control: AbstractControl): ValidationErrors | null {\n    let currentValue = control.value;\n    let isValid = currentValue % this.n == 0;\n\n    if (isValid) {\n      return null;\n    }\n    else {\n      return { divisible: { valid: false }};\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}